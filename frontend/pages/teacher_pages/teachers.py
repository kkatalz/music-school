import streamlit as st
import api_client as api


def show():
    tab1, tab2 = st.tabs(["–ü–µ—Ä–µ–≥–ª—è–¥ –í—á–∏—Ç–µ–ª—ñ–≤", "–î–æ–¥–∞—Ç–∏ –ù–æ–≤–æ–≥–æ –í—á–∏—Ç–µ–ª—è"])

    with tab1:
        if 'teacher_id_to_edit' not in st.session_state:
            st.session_state.teacher_id_to_edit = None

        if st.session_state.teacher_id_to_edit is None:
            display_teacher_list()
        else:
            display_edit_form(st.session_state.teacher_id_to_edit)

    with tab2:
        display_add_teacher_form()


def display_teacher_list():
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î —Å–ø–∏—Å–æ–∫ –≤—á–∏—Ç–µ–ª—ñ–≤ —É –≤–∏–≥–ª—è–¥—ñ –∫–∞—Ä—Ç–æ–∫ –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥—ñ–π."""
    st.header("–°–ø–∏—Å–æ–∫ –í—á–∏—Ç–µ–ª—ñ–≤")

    #if st.button("üîÑ –û–Ω–æ–≤–∏—Ç–∏ —Å–ø–∏—Å–æ–∫"):
    #    st.cache_data.clear()

    all_teachers_data = api.get_all_teachers()

    if all_teachers_data:
        st.info(f"–ó–Ω–∞–π–¥–µ–Ω–æ {len(all_teachers_data)} –≤—á–∏—Ç–µ–ª—ñ–≤.")
        st.divider()

        for teacher in all_teachers_data:
            teacher_id = teacher.get('id')
            with st.container(border=True):
                col1, col2 = st.columns([1, 4])
                with col1:
                    st.markdown("<h2 style='text-align: center; padding-top: 10px;'>üë®‚Äçüè´</h2>", unsafe_allow_html=True)

                with col2:
                    st.subheader(f"{teacher.get('firstName', '')} {teacher.get('lastName', '')}")
                    st.markdown(f"üìß **Email:** `{teacher.get('email', '-')}`")
                    st.markdown(f"üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** {teacher.get('phone', '-')}")
                    st.markdown(f" **Education:** {teacher.get('education', '-')}")
                    role = 'Head Teacher' if teacher.get('role') == 'headTeacher' else 'Teacher'
                    st.markdown(f" **Position:** {role}")

                st.divider()

                action_col1, action_col2 = st.columns(2)

                if action_col1.button(f"‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏", key=f"edit_{teacher_id}", use_container_width=True):
                    st.session_state.teacher_id_to_edit = teacher_id
                    st.rerun()

                if action_col2.button(f"üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏", key=f"delete_{teacher_id}", use_container_width=True):
                    success = api.delete_teacher(teacher_id)
                    if success:
                        st.success(f"–í—á–∏—Ç–µ–ª—è {teacher.get('firstName')} –≤–∏–¥–∞–ª–µ–Ω–æ.")
                        st.rerun()
                    else:
                        st.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—á–∏—Ç–µ–ª—è.")
    else:
        st.info('–í—á–∏—Ç–µ–ª—ñ–≤ –Ω–µ –±—É–ª–æ –∑–Ω–∞–π–¥–µ–Ω–æ.')


def display_edit_form(teacher_id: int):
    teacher_data = api.get_teacher(teacher_id)
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î —Ñ–æ—Ä–º—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—á–∏—Ç–µ–ª—è."""
    st.header(f"–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤—á–∏—Ç–µ–ª—è ({teacher_data.get('firstName')} {teacher_data.get('lastName')})")


    if not teacher_data:
        st.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –≤—á–∏—Ç–µ–ª—è.")
        if st.button("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ —Å–ø–∏—Å–∫—É"):
            st.session_state.teacher_id_to_edit = None
            st.rerun()
        return

    with st.form("edit_teacher_form"):
        st.write("–û–Ω–æ–≤—ñ—Ç—å –¥–∞–Ω—ñ –≤—á–∏—Ç–µ–ª—è:")

        first_name = st.text_input("–Ü–º'—è", value=teacher_data.get('firstName', ''))
        last_name = st.text_input("–ü—Ä—ñ–∑–≤–∏—â–µ", value=teacher_data.get('lastName', ''))
        email = st.text_input("Email", value=teacher_data.get('email', ''))
        phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω", value=str(teacher_data.get('phone', '')))
        education = st.text_input("–û—Å–≤—ñ—Ç–∞", value=teacher_data.get('education', ''))

        role_options = ["Teacher", "Head Teacher"]
        current_role_index = 1 if teacher_data.get('isHeadTeacher') else 0
        role = st.selectbox('Position:', role_options, index=current_role_index)

        submitted = st.form_submit_button("–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏")
        if submitted:
            updated_data = {
                "firstName": first_name,
                "lastName": last_name,
                "email": email,
                "phone": phone,
                "education": education,
                "isHeadTeacher": True if role == 'Head Teacher' else False
            }

            success = api.update_teacher(teacher_id, updated_data)
            if success:
                st.success("–î–∞–Ω—ñ –≤—á–∏—Ç–µ–ª—è —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!")
                st.session_state.teacher_id_to_edit = None
                st.rerun()
            else:
                st.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ.")

    if st.button("–°–∫–∞—Å—É–≤–∞—Ç–∏ —ñ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ —Å–ø–∏—Å–∫—É"):
        st.session_state.teacher_id_to_edit = None
        st.rerun()

def display_add_teacher_form():
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î —Ñ–æ—Ä–º—É –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –≤—á–∏—Ç–µ–ª—è."""
    st.header("–§–æ—Ä–º–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –≤—á–∏—Ç–µ–ª—è")

    with st.form("add_teacher_form", clear_on_submit=True):
        st.write("–í–≤–µ–¥—ñ—Ç—å –¥–∞–Ω—ñ –Ω–æ–≤–æ–≥–æ –≤—á–∏—Ç–µ–ª—è:")

        col1, col2 = st.columns(2)
        with col1:
            first_name = st.text_input("–Ü–º'—è*")
            last_name = st.text_input("–ü—Ä—ñ–∑–≤–∏—â–µ*")
            phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω*")

        with col2:
            education = st.text_input("–û—Å–≤—ñ—Ç–∞*")
            email = st.text_input("Email*")
            password = st.text_input("–ü–∞—Ä–æ–ª—å*", type="password")

        submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏ –í—á–∏—Ç–µ–ª—è")
        if submitted:
            teacher_data = {
                "firstName": first_name,
                "lastName": last_name,
                "phone": phone,
                "education": education,
                "email": email,
                "password": password,
            }

            success = api.add_teacher(teacher_data)
            if success:
                st.success("–í—á–∏—Ç–µ–ª—è —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!")
                st.rerun()

