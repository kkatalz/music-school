import streamlit as st
import sys
import os

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../../../')))
# -----------------------------------------
import api_client as api

def show():
    st.title("üéì –ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏")
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î —Å—Ç–æ—Ä—ñ–Ω–∫—É —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –¥–ª—è –≤—á–∏—Ç–µ–ª—è/–∑–∞–≤—É—á–∞."""

    tab1, tab2, tab3 = st.tabs(["–ü–µ—Ä–µ–≥–ª—è–¥ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤", "–î–æ–¥–∞—Ç–∏ –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞", "–î–æ–¥–∞—Ç–∏ –Ω–æ–≤–æ–≥–æ –≤—á–∏—Ç–µ–ª—è"])

    with tab1:
        display_all_students_by_teacher()
    with tab2:
        display_add_student_form()
    with tab3:
        display_add_teacher_form()



def display_all_students_by_teacher():
    st.header("–°–ø–∏—Å–æ–∫ –ú–æ—ó—Ö –°—Ç—É–¥–µ–Ω—Ç—ñ–≤")
    teacher_id = st.session_state["user"]["id"]

    # filters
    col1, col2 = st.columns(2)
    with col1:
        year_options = ["–≤—Å—ñ"] + list(range(1, 9))
        year = st.selectbox("–ù–∞–≤—á–∞–ª—å–Ω–∏–π —Ä—ñ–∫", year_options, key="students_year")
    with col2:
        semester_options = ["–≤—Å—ñ", 1, 2]
        semester = st.selectbox("–°–µ–º–µ—Å—Ç—Ä", semester_options, key="students_semester")

    if st.button("üîé –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤"):
        params_to_set = {}
        if year != "–≤—Å—ñ":
            params_to_set["year"] = year
        else:
            # –Ø–∫—â–æ –≤–∏–±—Ä–∞–Ω–æ "–≤—Å—ñ", –≤–∏–¥–∞–ª—è—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑ URL, —è–∫—â–æ –≤—ñ–Ω —Ç–∞–º –±—É–≤
            if "year" in st.query_params:
                del st.query_params["year"]

        if semester != "–≤—Å—ñ":
            params_to_set["semester"] = semester
        else:
            if "semester" in st.query_params:
                del st.query_params["semester"]

        st.query_params.update(params_to_set)

        year_param = year if year != "–≤—Å—ñ" else None
        semester_param = semester if semester != "–≤—Å—ñ" else None
        students_data = api.get_teacher_students(teacher_id, year_param, semester_param)

        if students_data:
            st.table(students_data)
        else:
            st.info("–°—Ç—É–¥–µ–Ω—Ç—ñ–≤ –∑–∞ –≤–∏–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

def display_add_student_form():
    """

    """
    st.header("–§–æ—Ä–º–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—Ç—É–¥–µ–Ω—Ç–∞")

    with st.form("add_student_form"):
        st.write("–í–≤–µ–¥—ñ—Ç—å –¥–∞–Ω—ñ –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞:")

        col1, col2 = st.columns(2)
        with col1:
            first_name = st.text_input("–Ü–º'—è*", key="first_name")
            last_name = st.text_input("–ü—Ä—ñ–∑–≤–∏—â–µ*", key="last_name")
            phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω*", key="phone")
            parent_phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω –±–∞—Ç—å–∫—ñ–≤*", key="parent_phone")

        with col2:
            address = st.text_input("–ê–¥—Ä–µ—Å–∞*", key="address")
            start_study_date = st.date_input("–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É –Ω–∞–≤—á–∞–Ω–Ω—è*", key="start_date")
            email = st.text_input("Email*", key="email")
            password = st.text_input("–ü–∞—Ä–æ–ª—å*", type="password", key="password")

        # submit button
        submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏ –°—Ç—É–¥–µ–Ω—Ç–∞")

        if submitted:
            student_data = {
                "firstName": first_name,
                "lastName": last_name,
                "phone": phone,
                "parentPhone": parent_phone,
                "address": address,
                "startStudyDate": start_study_date.isoformat(),
                "email": email,
                "password": password,
            }

            # call the method from api
            success = api.add_student(student_data)

            if success:
                st.success("–°—Ç—É–¥–µ–Ω—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!")
                # TODO: here may be logic for clearing the form etc.
            else:
                st.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –≤–∏—â–µ.")



def display_add_teacher_form():
    st.header("–§–æ—Ä–º–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –≤—á–∏—Ç–µ–ª—è")

    with st.form("add_teacher_form"):
        st.write("–í–≤–µ–¥—ñ—Ç—å –¥–∞–Ω—ñ –Ω–æ–≤–æ–≥–æ –≤—á–∏—Ç–µ–ª—è:")

        col1, col2 = st.columns(2)
        with col1:
            first_name = st.text_input("–Ü–º'—è*", key="first_name")
            last_name = st.text_input("–ü—Ä—ñ–∑–≤–∏—â–µ*", key="last_name")
            phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω*", key="phone")

        with col2:
            education = st.text_input("–û—Å–≤—ñ—Ç–∞*", key="education")
            email = st.text_input("Email*", key="email")
            password = st.text_input("–ü–∞—Ä–æ–ª—å*", type="password", key="password")

        # submit button
        submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏ –í—á–∏—Ç–µ–ª—è")

        if submitted:
            teacher_data = {
                "firstName": first_name,
                "lastName": last_name,
                "phone": phone,
                "education": education,
                "email": email,
                "password": password,
            }

            # call the method from api
            success = api.add_teacher(teacher_data)

            if success:
                st.success("–í—á–∏—Ç–µ–ª—è —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!")
                # TODO: here may be logic for clearing the form etc.
            else:
                st.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –≤—á–∏—Ç–µ–ª—è. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –≤–∏—â–µ.")
